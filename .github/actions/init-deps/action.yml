name: Initialize Dependencies
description: Install project dependencies

inputs:
  no-dev-deps:
    description: Whether to exclude pyproject.toml tool.poetry.dev-dependencies
    required: false
    default: "true"
  python-version:
    description: Python version to install
    required: false
    default: "3.10"

runs:
  using: composite
  steps:
    - name: Install Python
      uses: actions/setup-python@v2
      with: {python-version: "${{ inputs.python-version }}"}
    - name: Install Poetry
      uses: abatilo/actions-poetry@v2.1.4
    - name: Cache venv
      id: cache
      uses: actions/cache@v2
      with: {path: .venv, key: "${{ runner.os }}-venv-${{ hashFiles('poetry.lock') }}-${{ inputs.no-dev-deps }}"}
    - name: Validate venv
      id: validate
      if: "steps.cache.outputs.cache-hit == 'true'"
      shell: bash
      run: |
        poetry env info --ansi
        if poetry env info --no-ansi |grep -qE "^Valid: +True"; then
          echo "::set-output name=is-valid::true"
        fi
      # TODO: Evict cache on invalid venv: https://github.com/actions/cache/issues/2
    - name: Install dependencies
      if: "steps.validate.outputs.is-valid != 'true'"
      env: {NO_DEV: "${{ inputs.no-dev-deps == 'true' && 'true' || '' }}"}
      shell: bash
      run: make deps

outputs:
  python-version:
    description: Same as input
    value: ${{ inputs.python-version }}

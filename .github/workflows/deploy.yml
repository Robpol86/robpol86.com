name: Deploy

on:
  push:
    # Staging
    branches: ["**"]
    # Production
    tags: ["[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]"]

env:
  BASEURL_PROD: https://robpol86.com/
  BASEURL_STAGE: https://rob86stage.robpol86.com/
  IS_PROD: "${{ startsWith(github.ref, 'refs/tags/') && 'true' || '' }}"

jobs:

  build:
    name: Build HTML
    runs-on: ubuntu-latest
    steps:
      - {name: Check out repository code, uses: actions/checkout@v2, with: {fetch-depth: 0}}
      - {name: Initialize dependencies, uses: Robpol86/actions-init-deps-py@v3, with: {no-dev: "true"}}
      - {name: Build docs, run: make docs, env: {SPHINX_HTML_BASEURL: "${{ env.IS_PROD && env.BASEURL_PROD || env.BASEURL_STAGE }}"}}
      - {name: Store HTML, uses: actions/upload-artifact@v2, with: {name: html, path: ./docs/_build/html/, if-no-files-found: error}}

  publish:
    name: Publish to NFSN
    runs-on: ubuntu-latest
    needs: build
    concurrency: "${{ github.workflow }}-${{ github.job }}"
    steps:
      - {name: Check out repository code, uses: actions/checkout@v2}
      - {name: Fetch HTML files, uses: actions/download-artifact@v2, with: {name: html, path: ./docs/_build/html/}}
      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          source: ./docs/_build/html/
          user: "${{ env.IS_PROD && secrets.NFSN_SSH_USER_PROD || secrets.NFSN_SSH_USER_STAGE }}"
          ssh-key: "${{ secrets.NFSN_SSH_KEY }}"
          cf-token: "${{ secrets.TOKEN_CF_PURGE_CACHE }}"

  release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/')  # env.IS_PROD
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - {name: Check out repository code, uses: actions/checkout@v2}
      - {name: Fetch HTML files, uses: actions/download-artifact@v2, with: {name: html, path: ./docs/_build/html/}}
      - {name: Archive HTML files, run: tar -C build -czvf html.tar.gz html/}
      - {name: Parse changelog, id: cl, uses: ./.github/actions/read-changelog, with: {section: "${{ github.ref_name }}"}}
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: "${{ steps.cl.outputs.title }}"
          body: "${{ steps.cl.outputs.body }}"
          files: html.tar.gz
